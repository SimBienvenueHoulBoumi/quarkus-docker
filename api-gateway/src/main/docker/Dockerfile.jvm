# syntax=docker/dockerfile:1.6

FROM maven:3.9.9-eclipse-temurin-17 AS build
WORKDIR /workspace

ARG SERVICE_MODULE=api-gateway

COPY pom.xml ./
COPY api-gateway/pom.xml api-gateway/pom.xml
COPY users_service/pom.xml users_service/pom.xml
COPY articles_service/pom.xml articles_service/pom.xml
COPY orders_service/pom.xml orders_service/pom.xml
COPY notifications_service/pom.xml notifications_service/pom.xml

COPY ${SERVICE_MODULE}/pom.xml ${SERVICE_MODULE}/pom.xml
COPY ${SERVICE_MODULE}/src ${SERVICE_MODULE}/src

	RUN --mount=type=cache,target=/root/.m2 mvn -B -DskipTests -f pom.xml -pl ${SERVICE_MODULE} -am package

FROM registry.access.redhat.com/ubi8/openjdk-17:1.20

ENV LANGUAGE='en_US:en'

COPY --from=build --chown=185 /workspace/api-gateway/target/quarkus-app/lib/ /deployments/lib/
COPY --from=build --chown=185 /workspace/api-gateway/target/quarkus-app/*.jar /deployments/
COPY --from=build --chown=185 /workspace/api-gateway/target/quarkus-app/app/ /deployments/app/
COPY --from=build --chown=185 /workspace/api-gateway/target/quarkus-app/quarkus/ /deployments/quarkus/

EXPOSE 9000
USER 185
ENV JAVA_OPTS_APPEND="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV JAVA_APP_JAR="/deployments/quarkus-run.jar"

ENTRYPOINT [ "/opt/jboss/container/java/run/run-java.sh" ]

# Image metadata
LABEL org.opencontainers.image.source="https://github.com/SimBienvenueHoulBoumi/land-reservation-docker-quarkus"
LABEL org.opencontainers.image.licenses="MIT"
# Optional healthcheck (uncomment if curl is available in the runtime image)
# HEALTHCHECK --interval=30s --timeout=5s CMD curl -f http://localhost:9000/q/health || exit 1
