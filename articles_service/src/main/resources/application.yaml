quarkus:
  arc:
    selected-alternatives:
      - org.acme.articles.config.JwtAuthContextProducer
  http:
    port: ${HTTP_PORT:8082}
  
  datasource:
    db-kind: postgresql
    username: ${DB_USER:appuser}
    password: ${DB_PASSWORD:apppassword}
    jdbc:
      url: ${DB_JDBC_URL:jdbc:postgresql://localhost:5432/appdb}
  
  hibernate-orm:
    database:
      generation: update
    jdbc:
      statement-batch-size: 20
  
  log:
    category:
      "org.hibernate.SQL":
        level: INFO
      "io.smallrye.jwt":
        level: TRACE
  
  smallrye-openapi:
    path: ${OPENAPI_PATH:/openapi/articles}

  swagger-ui:
    always-include: true
    path: ${SWAGGER_PATH:/swagger/articles}

# JWT Configuration
jwt:
  issuer: ${JWT_ISSUER:users-service}
  algorithm: ${JWT_ALGORITHM:HS256}
  secret: ${JWT_SECRET:super-secret-change-me-please-change-me-32-bytes-minimum-length}

# Kafka Configuration
mp.messaging:
  outgoing:
    article-events:
      connector: smallrye-kafka
      topic: article.events
      # Sérialisation
      key.serializer: org.apache.kafka.common.serialization.StringSerializer
      value.serializer: org.apache.kafka.common.serialization.StringSerializer
      # Taille des messages
      max.request.size: 10485760
      # Garanties de livraison
      acks: all
      retries: 3
      # Performance
      compression.type: snappy
      batch.size: 16384
      linger.ms: 10
      # Idempotence (éviter les doublons)
      enable.idempotence: true
      # Connexion
      bootstrap.servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

kafka:
  bootstrap:
    servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
